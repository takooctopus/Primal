<ResourceDictionary x:Class="PrimalEditor.Dictionaries.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PrimalEditor.Dictionaries">
    
    <!--设置textblock即我们说的label的样式-->
    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <!--设置文本框的样式-->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,2"/>
    </Style>
    
    <!--设置文本框的输入事件，反正只要按了键盘就触发-->
    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
    </Style>
    
    <!--设置按钮样式-->
    <Style x:Key="SimpleButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush5}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PrimalWindowStyle" TargetType="{x:Type Window}">
        <!--定义了BorderBrush和Background颜色用的灰蓝色和黑色，很漂亮-->
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>

        <!--设置Window Style: 1.取消圆角 2.设置缩放位置宽度为系统默认 3.设置边框厚度为0 4.标题栏厚度 5.将所有边框都设置成不属于客户端 6.不使用系统的按钮(最大最小关闭) -->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0"
                    CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False" 
                    /> 
            </Setter.Value>
        </Setter>
        
        <!--设置窗口模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--设置窗口边框颜色和窗口背景颜色-->
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <!--设置边框的厚度为1-->
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <!--使用触发器，当窗口最大化时，将边框厚度设置成系统默认-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>
                            
                            <!--标题栏样式-->
                            <!--1.最上层 2.文字靠左 3.文字加粗 4.使用颜色 5.绑定程序名字-->
                            <!--1.右侧三个按钮-->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <!--这里使用了上面定义的SimpleButton样式-->
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <!--允许在非客户区域的button可以使用点击事件-->
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                
                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center" DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{StaticResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <Button x:Name="btnClose" Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                                <Button x:Name="btnRestore" Click="OnMaximizeRestore_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
                                                    Width="10" Height="8"/>
                                    </Button.Content>
                                </Button>
                                
                                <Button x:Name="btnMinimize" Click="OnMinimize_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
                                                    Width="10" Height="1" Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--类似于windowstyle[其实大部分是复制的]，设置dialogstyle-->
    <Style x:Key="PrimalDialogStyle" TargetType="{x:Type Window}">
        <!--定义了BorderBrush和Background颜色用的灰蓝色和黑色，很漂亮-->
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>

        <!--设置Window Style: 1.取消圆角 2.设置缩放位置宽度为系统默认 3.设置边框厚度为0 4.标题栏厚度 5.将所有边框都设置成不属于客户端 6.不使用系统的按钮(最大最小关闭) -->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0"
                    CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False" 
                    />
            </Setter.Value>
        </Setter>

        <!--设置窗口模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--设置窗口边框颜色和窗口背景颜色-->
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <!--设置边框的厚度为1-->
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <!--使用触发器，当窗口最大化时，将边框厚度设置成系统默认-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <!--标题栏样式-->
                            <!--1.最上层 2.文字靠左 3.文字加粗 4.使用颜色 5.绑定程序名字-->
                            <!--1.右侧三个按钮-->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <!--这里使用了上面定义的SimpleButton样式-->
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <!--允许在非客户区域的button可以使用点击事件-->
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>

                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center" DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{StaticResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <Button x:Name="btnClose" Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>